{"version":3,"sources":["components/TodoCounter/TodoCounter.jsx","components/TodoList/TodoList.jsx","components/TodoItem/TodoItem.jsx","components/CreateTodoButton/CreateTodoButton.jsx","components/TodoSearch/TodoSearch.jsx","hooks/useTodos.jsx","hooks/useLocalStorage.jsx","components/TodoHeader/TodoHeader.jsx","components/Modal/Modal.jsx","components/TodoForm/TodoForm.jsx","components/TodosLoading/TodosLoading.jsx","components/EmptyTodos/EmptyTodos.jsx","components/TodosError/TodosError.jsx","components/StorageChangeAlert/StorageChangeAlert.jsx","components/StorageChangeAlert/withStorageListener.jsx","components/NoResults/NoResults.jsx","components/App/App.js","index.js"],"names":["TodoCounter","completedTodos","totalTodosPROP","loading","className","TodoList","children","error","searchedToDos","searchedText","onError","onLoading","onEmpty","onEmptySearchResults","render","renderFunction","length","map","todo","TodoItem","props","onClick","onComplete","completed","text","onDelete","CreateTodoButton","setOpenModal","prevState","TodoSearch","search","setSearch","onChange","e","target","value","type","placeholder","disabled","useTodos","itemName","initialValue","useState","item","setItem","setLoading","setError","syncItems","setSyncItems","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","console","saveItem","newItem","syncBrowsertab","useLocalStorage","todos","saveToDos","openModal","filter","totalTodos","todoTextLC","toLowerCase","searchValueLC","includes","errorPROP","completeToDo","todoIndex","findIndex","newToDos","deleteTodo","splice","addToDo","push","TodoHeader","childrenArray","React","Children","toArray","child","cloneElement","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","required","maxLength","TodosLoading","EmptyTodos","style","textAlign","TodosError","WrappedComp","StorageChangeAlertWithStorageListener","show","toggleShow","storageChange","setStorageChange","window","addEventListener","change","key","log","NoResults","App","uuidv4","number","StrictMode"],"mappings":"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","file":"static/js/main.f933d1f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TodoCounter.css\";\r\n\r\nexport function TodoCounter({ completedTodos, totalTodosPROP, loading }) {\r\n  return (\r\n    <h2 className={`title ${loading && `title--loading`}`}>\r\n      Has completado {completedTodos} de {totalTodosPROP} TODOs\r\n    </h2>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./TodoList.css\";\r\n\r\n// 9 - Render props: Recibimos e INICIALIZAMOS las render props: onError - onLoading - onEmpty - render\r\n// Las render props, al ser funciones hay que activarlas/invocarlas con () - onError()\r\nexport function TodoList({\r\n  children,\r\n  error,\r\n  loading,\r\n  searchedToDos,\r\n  totalTodosPROP,\r\n  searchedText,\r\n\r\n  onError,\r\n  onLoading,\r\n  onEmpty,\r\n  onEmptySearchResults,\r\n  render,\r\n}) {\r\n  const renderFunction = children || render;\r\n\r\n  return (\r\n    <>\r\n      <section className='TodoList-container'>\r\n        {error && onError()}\r\n\r\n        {loading && onLoading()}\r\n\r\n        {!loading && !totalTodosPROP && onEmpty()}\r\n\r\n        {!!totalTodosPROP &&\r\n          !searchedToDos?.length &&\r\n          onEmptySearchResults(searchedText)}\r\n\r\n        {/* {console.log(!searchedToDos?.length)} */}\r\n\r\n        <ul className='list'>\r\n          {searchedToDos.map((todo) => renderFunction(todo))}\r\n        </ul>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\n// !searchedToDos?.length : El operador ? pregunta si existe, si es true, pregunta por su length. Con el operador ! pregunto si es cero/null/undefined/. Entonces, así pregunto si no hay todos en localStorage\r\n// El operador ? es opcional en este caso, solo para práctica\r\n","import React from \"react\";\r\nimport \"./TodoItem.css\";\r\n\r\nexport function TodoItem(props) {\r\n  return (\r\n    <>\r\n      <li className='todoItem'>\r\n        <span\r\n          onClick={props.onComplete}\r\n          className={`Icon Icon-check ${\r\n            props.completed && \"Icon-check--active\"\r\n          }`}>\r\n          ✔️\r\n        </span>\r\n\r\n        <p\r\n          className={`todoItem-p ${\r\n            props.completed && \"todoItem-p--completed\"\r\n          }`}>\r\n          {props.text}\r\n        </p>\r\n\r\n        <span onClick={props.onDelete} className='Icon Icon-delete'>\r\n        ❌\r\n        </span>\r\n      </li>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./CreateTodoButton.css\";\r\n\r\nexport function CreateTodoButton({ setOpenModal }) {\r\n  const onClickButton = () => {\r\n    setOpenModal((prevState) => !prevState);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button onClick={onClickButton} className='add-todo'>\r\n        +\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./TodoSearch.css\";\r\n\r\n// 11 - disabled={loading} : La prop disabled deshabilita el tag input cuando loading es true, y lo habilita cuando es false. disabled: boolean . Tambien tiene su pseudo-class, ver TodoSearch.css linea 36. Los mismo en TodoHeader.jsx/css \r\nexport function TodoSearch({ search, setSearch, loading }) {\r\n  return (\r\n    <div className='todoSearch'>\r\n      <input\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        type='text'\r\n        className='todoSearch__input'\r\n        placeholder='Buscar ToDo'\r\n        value={search}\r\n        disabled={loading}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import { useState } from \"react\";\r\nimport { useLocalStorage } from \"./useLocalStorage\";\r\n\r\n\r\n// 7 - Custom Hook useTodos(): Toda la lógica de la app. Guardamos y retornamos todo el estado en este custom Hook (como lo hacíamos con TodoContext.Provider en 1er curso, comparar). Solo lo usamos en el componente App. Desde este custom Hook consumimos el otro custom Hook useLocalStorage\r\nexport function useTodos() {\r\n  const {\r\n    item: todos,\r\n    saveItem: saveToDos,\r\n    loading,\r\n    error,\r\n    syncBrowsertab\r\n  } = useLocalStorage(\"TODOS_V1\", []);\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  const completedTodos = todos.filter((todo) => todo.completed === true).length;\r\n  const totalTodos = todos.length;\r\n\r\n  let searchedToDos = [];\r\n\r\n  if (search.length >= 1) {\r\n    searchedToDos = todos.filter((todo) => {\r\n      const todoTextLC = todo.text.toLowerCase();\r\n\r\n      const searchValueLC = search.toLowerCase();\r\n\r\n      return todoTextLC.includes(searchValueLC);\r\n    });\r\n  } else {\r\n    searchedToDos = todos;\r\n  }\r\n\r\n  const completeToDo = (text) => {\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n\r\n    const newToDos = [...todos];\r\n\r\n    newToDos[todoIndex].completed = true;\r\n\r\n    saveToDos(newToDos);\r\n  };\r\n\r\n  const deleteTodo = (text) => {\r\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\r\n\r\n    const newToDos = [...todos];\r\n\r\n    newToDos.splice(todoIndex, 1);\r\n\r\n    saveToDos(newToDos);\r\n  };\r\n\r\n  const addToDo = (text) => {\r\n    const newToDos = [...todos];\r\n\r\n    newToDos.push({\r\n      completed: false,\r\n      text: text,\r\n    });\r\n\r\n    saveToDos(newToDos);\r\n  };\r\n\r\n  // 7 - Al igual que useLocalStorage, al devolver más de 2 valores se exporta, por convencion, un OBJETO.  Ver 1er curso 13-Apuntes.txt regla 2) \r\n  return {\r\n    loading,\r\n    errorPROP: error,\r\n    totalTodosPROP: totalTodos,\r\n    completedTodos,\r\n    search: search,\r\n    setSearch,\r\n    searchedToDos,\r\n    completeToDo: completeToDo,\r\n    deleteTodo,\r\n    addToDo,\r\n    openModal,\r\n    setOpenModal,\r\n    syncBrowsertab\r\n  };\r\n}\r\n\r\n","import { useEffect, useState } from \"react\";\r\n\r\nexport function useLocalStorage(itemName, initialValue) {\r\n  const [item, setItem] = useState(initialValue);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const [syncItems, setSyncItems] = useState(true); // 15 - Este estado nos va a decir si estamos sincronizados con todas las pestañas de nuestro browser o no. Por defecto lo estamos.\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      try {\r\n        const localStorageItem = localStorage.getItem(itemName);\r\n\r\n        let parsedItem;\r\n\r\n        if (localStorageItem) {\r\n          parsedItem = JSON.parse(localStorageItem);\r\n        } else {\r\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\r\n\r\n          parsedItem = initialValue;\r\n        }\r\n\r\n        setItem(parsedItem);\r\n        \r\n        setLoading(false);\r\n        setSyncItems(true); // Una vez sincronizado, es true.\r\n\r\n      } catch (error) {\r\n        setError(error);\r\n        console.error();\r\n      }\r\n    }, 500);\r\n  }, [syncItems]);\r\n  // [syncItems] --> Cada vez que haya un cambio en syncItems, entramos nuevamente a localStorage y renderizamos nuevamente\r\n\r\n  const saveItem = (newItem) => {\r\n    try {\r\n      localStorage.setItem(itemName, JSON.stringify(newItem));\r\n\r\n      setItem(newItem);\r\n    } catch (error) {\r\n      setError(error);\r\n      console.error();\r\n    }\r\n  };\r\n\r\n  // 15 2da parte min. 6. - Activamos el loader, activamos el useEffect para que vaya a buscar a localStorage la nueva data y la renderice\r\n  const syncBrowsertab = () => {\r\n    setLoading(true); \r\n    setSyncItems(false);\r\n  };\r\n\r\n  return { item, saveItem, loading, error, syncBrowsertab };\r\n}\r\n","import React from \"react\";\r\n\r\nexport function TodoHeader({ children, loading }) {\r\n  const childrenArray = React.Children.toArray(children); // 11 - React.Children() tiene métodos, toArray() convierte a los children en un array\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        {childrenArray.map((child) => React.cloneElement(child, { loading }))}\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\n// 11 - React.cloneElement(child, {loading} )\r\n\r\n// Significa: React.cloneElement(element/compQueClono, { propsQueLePaso } ) --> 1er parámetro es que elemento/componente clono, SOLO PUEDE SER UN COMPONENTE/ELEMENTO; 2do parámetro es que props les paso a ese elemento/comp clonado\r\n\r\n// De este modo, clonamos cada child/Componente (primero TodoConter y luego Todosearch, posicion 0 y 1 de childrenArray) y les pasamos la props loading (prop que recibimos en cada componente y en cada uno hacemos lo suyo, ver)\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./Modal.css\";\r\n\r\nexport function Modal({ children }) {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"modal\"> {children} </div>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./TodoForm.css\";\r\n\r\nexport function TodoForm({ addToDo, setOpenModal }) {\r\n  const [newTodoValue, setNewTodoValue] = useState(\"\");\r\n\r\n  const onWrite = (e) => {\r\n    const value = e.target.value;\r\n\r\n    setNewTodoValue(value);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    setOpenModal(false);\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addToDo(newTodoValue);\r\n\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className='form'>\r\n      <label className='form__label'>\r\n        Escribe un nuevo TODO\r\n        <textarea\r\n          value={newTodoValue}\r\n          onChange={onWrite}\r\n          className='form__textarea'\r\n          placeholder='¡Crea un nuevo TODO!'\r\n          required\r\n          maxLength='33'\r\n        />\r\n      </label>\r\n\r\n      <div className='form__button-area'>\r\n        <button\r\n          className='form__button form__cancel-button'\r\n          type='button'\r\n          onClick={onCancel}>\r\n          Cancelar\r\n        </button>\r\n\r\n        <button className='form__button form__add-button' type='submit'>\r\n          Agregar\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./TodosLoading.css\"\r\n\r\nexport function TodosLoading() {\r\n  return <div className=\"loader\"></div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport function EmptyTodos() {\r\n  return <h3 style={{ textAlign: \"center\" }}> Crea tu primer ToDo </h3>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport function TodosError() {\r\n  return <p> Hubo un error </p>;\r\n}\r\n","import React from \"react\";\r\nimport { withStorageListener } from \"./withStorageListener\";\r\nimport \"./StorageChangeAlert.css\";\r\n\r\n// 14 - Event \"storage\" - Uso de HOC\r\nfunction StorageChangeAlert({ show, toggleShow }) {\r\n  //const { show, toggleShow } = useStorageListener(syncBrowsertab); // Alternativa con Custom Hook en reemplazo de HOC, debe exportarse esta funcion StorageChangeAlert en lugar de StorageChangeAlertWithStorageListener. Asimismo, renderizar StorageChangeAlert en App.js. StorageChangeAlert debe recibir la prop syncBrowsertab y enviarsela a useStorageListener\r\n\r\n  if (show) {\r\n    return (\r\n      <>\r\n        <div className='container'>\r\n          <div className='subcontainer'>\r\n            <h3 className='message'>\r\n              Your list is <span>outdated</span> .\r\n            </h3>\r\n\r\n            <button className='btn' onClick={() => toggleShow(false)}>\r\n              Refresh\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport const StorageChangeAlertWithStorageListener =\r\n  withStorageListener(StorageChangeAlert);\r\n\r\n// StorageChangeAlert == WrappedComp\r\n\r\n// StorageChangeAlertWithStorageListener == WrappedCompWithStorageListener --> A StorageChangeAlertWithStorageListener le pasamos syncBrowsertab en App.js para sincronizar\r\n\r\n// onClick={() => toggleShow(false)} === setStorageChange(false) --> Escondemos la alerta de nuevos ToDos\r\n","import React, { useState } from \"react\";\r\n\r\n// 14 - Práctica real HOC\r\nexport function withStorageListener(WrappedComp) {\r\n  // props === tiene syncBrowsertab ya que se lo pasamos en App.js -- WrappedCompWithStorageListener === StorageChangeAlertWithStorageListener\r\n  return function WrappedCompWithStorageListener(props) {\r\n    const [storageChange, setStorageChange] = useState(false); // 14 - ...\r\n\r\n    // 15 - Escuchamos el evento de localStorage (se dispara cuando hay un cambio en localStorage) y preguntamos si la key de localStorage es la que determinamos en useTodos cuando usamos el Hook useLocalStorage (si es la key de localStorage donde guardamos la coll/array con los ToDos)\r\n    window.addEventListener(\"storage\", (change) => {\r\n      // Si hubo cambios en la key donde guardamos coll/array con los ToDos, entonces setStorageChange(true); lo que hace que es StorageChangeAlert/WrappedComp...\r\n      if (change.key === \"TODOS_V1\") {\r\n        console.log(`Hubo cambios en ${change.key}`);\r\n\r\n        setStorageChange(true);\r\n      }\r\n    });\r\n\r\n    const toggleShow = () => {\r\n      props.syncBrowsertab();\r\n      setStorageChange(false);\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <WrappedComp show={storageChange} toggleShow={toggleShow} />\r\n      </>\r\n    );\r\n  };\r\n}\r\n","import React from \"react\";\r\n\r\nexport function NoResults({ searchedText }) {\r\n  return (\r\n    <>\r\n      <h4 style={{ textAlign: \"center\" }}>\r\n        No hay resultados para \"{searchedText}\"\r\n      </h4>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { TodoCounter } from \"../TodoCounter/TodoCounter\";\nimport { TodoList } from \"../TodoList/TodoList\";\nimport { TodoItem } from \"../TodoItem/TodoItem\";\nimport { CreateTodoButton } from \"../CreateTodoButton/CreateTodoButton\";\nimport { TodoSearch } from \"../TodoSearch/TodoSearch\";\n\nimport { useTodos } from \"../../hooks/useTodos\";\n\nimport { TodoHeader } from \"../TodoHeader/TodoHeader\";\n\nimport { Modal } from \"../Modal/Modal\";\nimport { TodoForm } from \"../TodoForm/TodoForm\";\n\nimport { TodosLoading } from \"../TodosLoading/TodosLoading\";\nimport { EmptyTodos } from \"../EmptyTodos/EmptyTodos\";\nimport { TodosError } from \"../TodosError/TodosError\";\n\nimport { StorageChangeAlertWithStorageListener } from \"../StorageChangeAlert/StorageChangeAlert\";\n\nimport { v4 as uuidv4 } from \"uuid\";\nimport { NoResults } from \"../NoResults/NoResults\";\n\nfunction App() {\n  const {\n    loading,\n    errorPROP,\n    searchedToDos,\n    completeToDo,\n    deleteTodo,\n    addToDo,\n    openModal,\n    setOpenModal,\n    search,\n    setSearch,\n    totalTodosPROP,\n    completedTodos,\n    syncBrowsertab,\n  } = useTodos(); // 7 - Destructuramos el return del Custom Hook useTodos(), objeto con todos los estados de la app (antiguo estado guardado en Provider value={{}} que consumiamos aquí con useContext() )\n\n  return (\n    <>\n      <TodoHeader loading={loading}>\n        <TodoCounter\n          totalTodosPROP={totalTodosPROP}\n          completedTodos={completedTodos}\n        />\n\n        <TodoSearch search={search} setSearch={setSearch} />\n      </TodoHeader>\n\n      <StorageChangeAlertWithStorageListener syncBrowsertab={syncBrowsertab} />\n\n      <TodoList\n        error={errorPROP}\n        loading={loading}\n        searchedToDos={searchedToDos}\n        totalTodosPROP={totalTodosPROP}\n        searchedText={search}\n        onError={() => <TodosError />}\n        onLoading={() => <TodosLoading />}\n        onEmpty={() => <EmptyTodos />}\n        onEmptySearchResults={(searchedText) => (\n          <NoResults searchedText={searchedText} />\n        )}\n        render={(todo) => (\n          <TodoItem\n            key={uuidv4()}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeToDo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        )}>\n        {(todo) => (\n          <TodoItem\n            key={uuidv4()}\n            number={uuidv4()}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => completeToDo(todo.text)}\n            onDelete={() => deleteTodo(todo.text)}\n          />\n        )}\n      </TodoList>\n\n      {openModal && (\n        <Modal>\n          <TodoForm addToDo={addToDo} setOpenModal={setOpenModal} />\n        </Modal>\n      )}\n\n      <CreateTodoButton setOpenModal={setOpenModal} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}